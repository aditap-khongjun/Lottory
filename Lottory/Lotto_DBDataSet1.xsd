<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Lotto_DBDataSet1" targetNamespace="http://tempuri.org/Lotto_DBDataSet1.xsd" xmlns:mstns="http://tempuri.org/Lotto_DBDataSet1.xsd" xmlns="http://tempuri.org/Lotto_DBDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Lotto_DBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Lotto_DBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Lottory.Properties.Settings.GlobalReference.Default.Lotto_DBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypeNumberInfoTableAdapter" GeneratorDataComponentClassName="TypeNumberInfoTableAdapter" Name="TypeNumberInfo" UserDataComponentName="TypeNumberInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Lotto_DBConnectionString (Settings)" DbObjectName="dbo.TypeNumberInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TypeNumberInfo] WHERE (([TypeID] = @Original_TypeID) AND ((@IsNull_NDigit = 1 AND [NDigit] IS NULL) OR ([NDigit] = @Original_NDigit)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NDigit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NDigit" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_NDigit" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="NDigit" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TypeNumberInfo] ([TypeID], [TypeName], [NDigit]) VALUES (@TypeID, @TypeName, @NDigit);
SELECT TypeID, TypeName, NDigit FROM TypeNumberInfo WHERE (TypeID = @TypeID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@NDigit" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="NDigit" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TypeID, TypeName, NDigit FROM dbo.TypeNumberInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TypeNumberInfo] SET [TypeID] = @TypeID, [TypeName] = @TypeName, [NDigit] = @NDigit WHERE (([TypeID] = @Original_TypeID) AND ((@IsNull_NDigit = 1 AND [NDigit] IS NULL) OR ([NDigit] = @Original_NDigit)));
SELECT TypeID, TypeName, NDigit FROM TypeNumberInfo WHERE (TypeID = @TypeID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@NDigit" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="NDigit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NDigit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NDigit" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_NDigit" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="NDigit" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TypeID" DataSetColumn="TypeID" />
              <Mapping SourceColumn="TypeName" DataSetColumn="TypeName" />
              <Mapping SourceColumn="NDigit" DataSetColumn="NDigit" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Lotto_DBDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="Lotto_DBDataSet1" msprop:Generator_UserDSName="Lotto_DBDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TypeNumberInfo" msprop:Generator_TableClassName="TypeNumberInfoDataTable" msprop:Generator_TableVarName="tableTypeNumberInfo" msprop:Generator_RowChangedName="TypeNumberInfoRowChanged" msprop:Generator_TablePropName="TypeNumberInfo" msprop:Generator_RowDeletingName="TypeNumberInfoRowDeleting" msprop:Generator_RowChangingName="TypeNumberInfoRowChanging" msprop:Generator_RowEvHandlerName="TypeNumberInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="TypeNumberInfoRowDeleted" msprop:Generator_RowClassName="TypeNumberInfoRow" msprop:Generator_UserTableName="TypeNumberInfo" msprop:Generator_RowEvArgName="TypeNumberInfoRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TypeID" msprop:Generator_ColumnVarNameInTable="columnTypeID" msprop:Generator_ColumnPropNameInRow="TypeID" msprop:Generator_ColumnPropNameInTable="TypeIDColumn" msprop:Generator_UserColumnName="TypeID" type="xs:int" />
              <xs:element name="TypeName" msprop:Generator_ColumnVarNameInTable="columnTypeName" msprop:Generator_ColumnPropNameInRow="TypeName" msprop:Generator_ColumnPropNameInTable="TypeNameColumn" msprop:Generator_UserColumnName="TypeName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="NDigit" msprop:Generator_ColumnVarNameInTable="columnNDigit" msprop:Generator_ColumnPropNameInRow="NDigit" msprop:Generator_ColumnPropNameInTable="NDigitColumn" msprop:Generator_UserColumnName="NDigit" type="xs:short" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TypeNumberInfo" />
      <xs:field xpath="mstns:TypeID" />
    </xs:unique>
  </xs:element>
</xs:schema>